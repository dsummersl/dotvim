
global !p
import os
import sys
sys.path.append(os.path.expanduser('~/.vim/python'))
from ultisniphelpers import *
endglobal

snippet args "Add default VT style arg parsing." b
import sys
import platform
import re
if (('-h' in sys.argv) or ('--help' in sys.argv) or (len(sys.argv) <= 1)):
  invocation = '`!v substitute(@%, "^.*\/", "", "")`'
  if (platform.system() == 'Windows'):
    invocation = 'python `!v substitute(@%, "^.*\/", "", "")`'
  print('Usage: '+invocation+' [options] <environments>')
  print('''
${2:Description}

Options:
  --help,-h                   Display this help message.
  --test                      Run tests in this script.`!p
# by default don't make a new variable.
snip.rv = ''
if t[4]:
  # show the option for this new option
  keyval = '--'+ t[3] +'=<VAL>'
  snip.rv = '\n\t'+ keyval +''.rjust(30 - len(keyval) - int(vim.eval('&shiftwidth'))) + 'DESCRIPTION'
`
''')

# argument parameters:
TEST=False`!p
# by default don't make a new variable.
snip.rv = ''
if t[4]:
  # show the variable as long as it exists:
  snip.rv = '\n'+ t[3] +'=None'
`

# parse out the program parameters:
for arg in sys.argv[1:]:
  m = re.match('--([a-z-]+)=(.*)', arg)
  if arg == '--test':
    TEST = True
  elif m:
    key = m.group(1)
    value = m.group(2)
    ${4:
    if key == '${3:VARIABLE}':
      $3 = value
}
  else:
    print "Unknown option: '%s'" % (arg)
    print "Run with -h option to see how to use this script. "
    sys.exit(1)

if TEST:
  import nose
  sys.exit(nose.main(argv=['-vvv',__file__]))
$0
endsnippet
